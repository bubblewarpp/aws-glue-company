{
  "name" : "company-re",
  "jobMode" : "VISUAL",
  "description" : "",
  "role" : "arn:aws:iam::975050243858:role/Developer-Glue-MDM",
  "executionProperty" : {
    "maxConcurrentRuns" : 1
  },
  "command" : {
    "name" : "glueetl",
    "scriptLocation" : "s3://aws-glue-assets-975050243858-ap-southeast-1/scripts/company-re.py",
    "pythonVersion" : "3"
  },
  "defaultArguments" : {
    "--enable-metrics" : "true",
    "--enable-spark-ui" : "true",
    "--extra-py-files" : "s3://aws-glue-studio-transforms-737106620487-prod-ap-southeast-1/gs_common.py,s3://aws-glue-studio-transforms-737106620487-prod-ap-southeast-1/gs_derived.py",
    "--spark-event-logs-path" : "s3://aws-glue-assets-975050243858-ap-southeast-1/sparkHistoryLogs/",
    "--enable-job-insights" : "true",
    "--enable-observability-metrics" : "true",
    "--enable-glue-datacatalog" : "true",
    "--job-bookmark-option" : "job-bookmark-disable",
    "--job-language" : "python",
    "--TempDir" : "s3://aws-glue-assets-975050243858-ap-southeast-1/temporary/"
  },
  "connections" : {
    "connections" : [ "Golden Copy-MDM" ]
  },
  "maxRetries" : 0,
  "allocatedCapacity" : 20,
  "timeout" : 480,
  "maxCapacity" : 20.0,
  "glueVersion" : "4.0",
  "numberOfWorkers" : 10,
  "workerType" : "G.2X",
  "executionClass" : "STANDARD",
  "codeGenConfigurationNodes" : "{\"node-1755498892291\":{\"ApplyMapping\":{\"Inputs\":[\"node-1755498879519\"],\"Mapping\":[{\"Dropped\":false,\"FromPath\":[\"jumlah_karyawan_1\"],\"FromType\":\"int\",\"ToKey\":\"company_size\",\"ToType\":\"int\"},{\"Dropped\":false,\"FromPath\":[\"id\"],\"FromType\":\"int\",\"ToKey\":\"pk_size\",\"ToType\":\"int\"}],\"Name\":\"Change size\"}},\"node-1755489636988\":{\"CatalogSource\":{\"Database\":\"mdm-gc-latest\",\"Name\":\"company\",\"PartitionPredicate\":\"\",\"Table\":\"mdm_marketing_clients\"}},\"node-1755498879519\":{\"SelectFields\":{\"Inputs\":[\"node-1755489636988\"],\"Name\":\"Select size\",\"Paths\":[[\"id\"],[\"jumlah_karyawan_1\"]]}},\"node-1755589930026\":{\"SparkSQL\":{\"Inputs\":[\"node-1755587268101\"],\"Name\":\"Global Package\",\"OutputSchemas\":[{\"Columns\":[{\"Name\":\"id\",\"Type\":\"int\"},{\"Name\":\"name\",\"Type\":\"string\"},{\"Name\":\"address\",\"Type\":\"string\"},{\"Name\":\"industry_sector\",\"Type\":\"string\"},{\"Name\":\"npwp_comp\",\"Type\":\"string\"},{\"Name\":\"nib\",\"Type\":\"string\"},{\"Name\":\"province\",\"Type\":\"string\"},{\"Name\":\"city\",\"Type\":\"string\"},{\"Name\":\"district\",\"Type\":\"string\"},{\"Name\":\"postal_code\",\"Type\":\"string\"},{\"Name\":\"company_size\",\"Type\":\"string\"},{\"Name\":\"website\",\"Type\":\"string\"},{\"Name\":\"company_social_media\",\"Type\":\"string\"},{\"Name\":\"customer_rate\",\"Type\":\"decimal(10,2)\"}]}],\"SqlAliases\":[{\"Alias\":\"myDataSource\",\"From\":\"node-1755587268101\"}],\"SqlQuery\":\"WITH cfg AS (SELECT CAST(100 AS BIGINT) AS min_rows),  -- ubah ambang suka-suka\\r\\nsrc_raw AS (\\r\\n  SELECT\\r\\n    CAST(id AS INT) AS id,\\r\\n    name, address, industry_sector, npwp_comp, nib, province, city,\\r\\n    district, postal_code, company_size, website, company_social_media,\\r\\n    CAST(customer_rate AS DECIMAL(3,1)) AS customer_rate\\r\\n  FROM myDataSource\\r\\n),\\r\\nsrc_cnt AS (SELECT COUNT(*) AS c FROM src_raw),\\r\\ngate AS (\\r\\n  SELECT CASE\\r\\n           WHEN s.c = 0 THEN 0\\r\\n           WHEN s.c < cfg.min_rows THEN 0         -- tahan jika terlalu sedikit\\r\\n           ELSE 1\\r\\n         END AS ok\\r\\n  FROM src_cnt s CROSS JOIN cfg\\r\\n)\\r\\nSELECT\\r\\n  id, name, address, industry_sector, npwp_comp, nib, province, city,\\r\\n  district, postal_code, company_size, website, company_social_media, customer_rate\\r\\nFROM src_raw\\r\\nCROSS JOIN gate\\r\\nWHERE ok = 1;\"}},\"node-1755500875431\":{\"ApplyMapping\":{\"Inputs\":[\"node-1755500692663\"],\"Mapping\":[{\"Dropped\":false,\"FromPath\":[\"id\"],\"FromType\":\"int\",\"ToKey\":\"id\",\"ToType\":\"int\"},{\"Dropped\":false,\"FromPath\":[\"name\"],\"FromType\":\"string\",\"ToKey\":\"name\",\"ToType\":\"string\"},{\"Dropped\":true,\"FromPath\":[\"pk_address\"],\"FromType\":\"int\",\"ToKey\":\"pk_address\",\"ToType\":\"int\"},{\"Dropped\":false,\"FromPath\":[\"address\"],\"FromType\":\"string\",\"ToKey\":\"address\",\"ToType\":\"varchar\"},{\"Dropped\":true,\"FromPath\":[\"pk_postal\"],\"FromType\":\"int\",\"ToKey\":\"pk_postal\",\"ToType\":\"int\"},{\"Dropped\":false,\"FromPath\":[\"postal_code\"],\"FromType\":\"string\",\"ToKey\":\"postal_code\",\"ToType\":\"varchar\"},{\"Dropped\":false,\"FromPath\":[\"company_size\"],\"FromType\":\"string\",\"ToKey\":\"company_size\",\"ToType\":\"varchar\"},{\"Dropped\":true,\"FromPath\":[\"pk_size\"],\"FromType\":\"int\",\"ToKey\":\"pk_size\",\"ToType\":\"int\"},{\"Dropped\":true,\"FromPath\":[\"pk_prov\"],\"FromType\":\"int\",\"ToKey\":\"pk_prov\",\"ToType\":\"int\"},{\"Dropped\":true,\"FromPath\":[\"prov_id\"],\"FromType\":\"int\",\"ToKey\":\"prov_id\",\"ToType\":\"int\"},{\"Dropped\":true,\"FromPath\":[\"pk_city\"],\"FromType\":\"int\",\"ToKey\":\"pk_city\",\"ToType\":\"int\"},{\"Dropped\":true,\"FromPath\":[\"city_id\"],\"FromType\":\"int\",\"ToKey\":\"city_id\",\"ToType\":\"int\"},{\"Dropped\":true,\"FromPath\":[\"pk_prov_utama\"],\"FromType\":\"int\",\"ToKey\":\"pk_prov_utama\",\"ToType\":\"int\"},{\"Dropped\":false,\"FromPath\":[\"province\"],\"FromType\":\"string\",\"ToKey\":\"province\",\"ToType\":\"varchar\"},{\"Dropped\":true,\"FromPath\":[\"pk_city_utama\"],\"FromType\":\"int\",\"ToKey\":\"pk_city_utama\",\"ToType\":\"int\"},{\"Dropped\":false,\"FromPath\":[\"city\"],\"FromType\":\"string\",\"ToKey\":\"city\",\"ToType\":\"varchar\"}],\"Name\":\"Change final\"}},\"node-1755498972391\":{\"SelectFields\":{\"Inputs\":[\"node-1755489636988\"],\"Name\":\"Select prov\",\"Paths\":[[\"id\"],[\"prov_id\"]]}},\"node-1755498772254\":{\"ApplyMapping\":{\"Inputs\":[\"node-1755498716808\"],\"Mapping\":[{\"Dropped\":false,\"FromPath\":[\"id\"],\"FromType\":\"int\",\"ToKey\":\"pk_postal\",\"ToType\":\"int\"},{\"Dropped\":false,\"FromPath\":[\"kode_pos\"],\"FromType\":\"string\",\"ToKey\":\"postal_code\",\"ToType\":\"string\"}],\"Name\":\"Change postal\"}},\"node-1755498606069\":{\"SelectFields\":{\"Inputs\":[\"node-1755489636988\"],\"Name\":\"Select address\",\"Paths\":[[\"id\"],[\"address\"]]}},\"node-1755499019866\":{\"ApplyMapping\":{\"Inputs\":[\"node-1755498989785\"],\"Mapping\":[{\"Dropped\":false,\"FromPath\":[\"id\"],\"FromType\":\"int\",\"ToKey\":\"pk_city\",\"ToType\":\"int\"},{\"Dropped\":false,\"FromPath\":[\"city_id\"],\"FromType\":\"int\",\"ToKey\":\"city_id\",\"ToType\":\"int\"}],\"Name\":\"Change city\"}},\"node-1755500468416\":{\"CatalogSource\":{\"Database\":\"mdm-gc-latest\",\"Name\":\"province\",\"PartitionPredicate\":\"\",\"Table\":\"mdm_master_provinces\"}},\"node-1755498716808\":{\"SelectFields\":{\"Inputs\":[\"node-1755489636988\"],\"Name\":\"Select postal\",\"Paths\":[[\"id\"],[\"kode_pos\"]]}},\"node-1755587268101\":{\"SparkSQL\":{\"Inputs\":[\"node-1755500875431\"],\"Name\":\"Clean with hash\",\"OutputSchemas\":[{\"Columns\":[{\"Name\":\"id\",\"Type\":\"int\"},{\"Name\":\"name\",\"Type\":\"string\"},{\"Name\":\"address\",\"Type\":\"string\"},{\"Name\":\"industry_sector\",\"Type\":\"string\"},{\"Name\":\"npwp_comp\",\"Type\":\"string\"},{\"Name\":\"nib\",\"Type\":\"string\"},{\"Name\":\"province\",\"Type\":\"string\"},{\"Name\":\"city\",\"Type\":\"string\"},{\"Name\":\"district\",\"Type\":\"string\"},{\"Name\":\"postal_code\",\"Type\":\"string\"},{\"Name\":\"company_size\",\"Type\":\"string\"},{\"Name\":\"website\",\"Type\":\"string\"},{\"Name\":\"company_social_media\",\"Type\":\"string\"},{\"Name\":\"customer_rate\",\"Type\":\"decimal(10,2)\"},{\"Name\":\"row_hash\",\"Type\":\"string\"}]}],\"SqlAliases\":[{\"Alias\":\"myDataSource\",\"From\":\"node-1755500875431\"}],\"SqlQuery\":\"WITH src AS (\\r\\n  SELECT id, name, address, postal_code, company_size, province, city\\r\\n  FROM myDataSource\\r\\n),\\r\\n\\r\\n/* 1) NORMALISASI DASAR */\\r\\nnorm AS (\\r\\n  SELECT\\r\\n    id,\\r\\n\\r\\n    -- Nama: trim, minimal 3 char, max 150\\r\\n    CASE \\r\\n      WHEN name IS NULL OR length(trim(name)) < 3 THEN NULL \\r\\n      ELSE substring(trim(name), 1, 150) \\r\\n    END AS name,\\r\\n\\r\\n    -- Alamat: trim untuk validasi panjang\\r\\n    trim(address) AS address,\\r\\n\\r\\n    -- Placeholder kolom bisnis (belum ada di source)\\r\\n    CAST(NULL AS STRING) AS industry_sector,\\r\\n    CAST(NULL AS STRING) AS npwp_comp_norm,\\r\\n    CAST(NULL AS STRING) AS nib_norm,\\r\\n\\r\\n    -- Wilayah\\r\\n    substring(initcap(trim(coalesce(province, ''))), 1, 50)  AS province,\\r\\n    substring(initcap(trim(coalesce(city, ''))),     1, 100) AS city,\\r\\n    CAST(NULL AS STRING) AS district,\\r\\n\\r\\n    -- Kode pos: simpan digit saja dulu\\r\\n    regexp_replace(coalesce(CAST(postal_code AS STRING), ''), '[^0-9]', '') AS postal_code_digits,\\r\\n\\r\\n    -- Normalisasi company_size berbasis lower()\\r\\n    CASE lower(coalesce(company_size,'')) \\r\\n      WHEN 's'      THEN 'small'\\r\\n      WHEN 'small'  THEN 'small'\\r\\n      WHEN 'm'      THEN 'medium'\\r\\n      WHEN 'medium' THEN 'medium'\\r\\n      WHEN 'l'      THEN 'large'\\r\\n      WHEN 'large'  THEN 'large'\\r\\n      ELSE 'unknown'\\r\\n    END AS company_size,\\r\\n\\r\\n    -- Placeholder lain\\r\\n    CAST(NULL AS STRING)       AS website_norm,\\r\\n    CAST(NULL AS STRING)       AS company_social_media,\\r\\n    CAST(NULL AS DECIMAL(3,1)) AS customer_rate_num\\r\\n  FROM src\\r\\n),\\r\\n\\r\\n/* 2) CANONICALIZATION TAMBAHAN */\\r\\nnorm2 AS (\\r\\n  SELECT\\r\\n    n.*,\\r\\n    -- Kode pos final: wajib 5 digit, selain itu NULL\\r\\n    CASE \\r\\n      WHEN length(n.postal_code_digits) = 5 THEN n.postal_code_digits\\r\\n      ELSE NULL\\r\\n    END AS postal_code_norm\\r\\n  FROM norm n\\r\\n),\\r\\n\\r\\n/* 3) SKORING DUPLIKAT ID */\\r\\nscored1 AS (\\r\\n  SELECT\\r\\n    n2.*,\\r\\n    COUNT(1) OVER (PARTITION BY id) AS id_dupe_cnt\\r\\n  FROM norm2 n2\\r\\n),\\r\\n\\r\\n/* 4) ATURAN DATA QUALITY (paralel semangat versi personal) */\\r\\nscored AS (\\r\\n  SELECT\\r\\n    s1.*,\\r\\n    CASE\\r\\n      WHEN id IS NULL THEN 'BAD_ID_NULL'\\r\\n      WHEN name IS NULL THEN 'BAD_NAME'\\r\\n      WHEN length(address) > 255 THEN 'BAD_ADDRESS_LEN'\\r\\n      WHEN id_dupe_cnt > 1 THEN 'BAD_DUP_ID'\\r\\n      -- Jika ada digit kode pos tapi bukan 5 digit, tandai bad\\r\\n      WHEN postal_code_digits IS NOT NULL AND postal_code_digits <> '' AND length(postal_code_digits) <> 5 THEN 'BAD_POSTAL_LEN'\\r\\n      ELSE 'OK'\\r\\n    END AS dq_flag\\r\\n  FROM scored1 s1\\r\\n)\\r\\n\\r\\n/* 5) OUTPUT AKHIR + ROW_HASH UNTUK JEJAK PERUBAHAN */\\r\\nSELECT\\r\\n  id,\\r\\n  NULLIF(trim(name), '')                 AS name,\\r\\n  NULLIF(trim(address), '')              AS address,\\r\\n  NULLIF(trim(industry_sector), '')      AS industry_sector,\\r\\n  NULLIF(trim(npwp_comp_norm), '')       AS npwp_comp,\\r\\n  NULLIF(trim(nib_norm), '')             AS nib,\\r\\n  NULLIF(trim(province), '')             AS province,\\r\\n  NULLIF(trim(city), '')                 AS city,\\r\\n  NULLIF(trim(district), '')             AS district,\\r\\n  NULLIF(trim(postal_code_norm), '')     AS postal_code,\\r\\n  NULLIF(trim(company_size), '')         AS company_size,\\r\\n  NULLIF(trim(website_norm), '')         AS website,\\r\\n  NULLIF(trim(company_social_media), '') AS company_social_media,\\r\\n  CAST(customer_rate_num AS DECIMAL(3,1)) AS customer_rate,\\r\\n\\r\\n  -- Paritas dengan personal: jejak perubahan\\r\\n  md5(concat_ws('||',\\r\\n      CAST(id AS STRING),\\r\\n      coalesce(trim(name), ''),\\r\\n      coalesce(trim(address), ''),\\r\\n      coalesce(trim(industry_sector), ''),\\r\\n      coalesce(trim(npwp_comp_norm), ''),\\r\\n      coalesce(trim(nib_norm), ''),\\r\\n      coalesce(trim(province), ''),\\r\\n      coalesce(trim(city), ''),\\r\\n      coalesce(trim(district), ''),\\r\\n      coalesce(trim(NULLIF(trim(postal_code_norm), '')), ''),\\r\\n      coalesce(trim(company_size), ''),\\r\\n      coalesce(trim(website_norm), ''),\\r\\n      coalesce(trim(company_social_media), ''),\\r\\n      coalesce(CAST(customer_rate_num AS STRING), '')\\r\\n  )) AS row_hash\\r\\nFROM scored\\r\\nWHERE dq_flag = 'OK';\"}},\"node-1755499001717\":{\"ApplyMapping\":{\"Inputs\":[\"node-1755498972391\"],\"Mapping\":[{\"Dropped\":false,\"FromPath\":[\"id\"],\"FromType\":\"int\",\"ToKey\":\"pk_prov\",\"ToType\":\"int\"},{\"Dropped\":false,\"FromPath\":[\"prov_id\"],\"FromType\":\"int\",\"ToKey\":\"prov_id\",\"ToType\":\"int\"}],\"Name\":\"Change prov\"}},\"node-1755500508841\":{\"ApplyMapping\":{\"Inputs\":[\"node-1755500493385\"],\"Mapping\":[{\"Dropped\":false,\"FromPath\":[\"id\"],\"FromType\":\"int\",\"ToKey\":\"pk_prov_utama\",\"ToType\":\"int\"},{\"Dropped\":false,\"FromPath\":[\"name\"],\"FromType\":\"string\",\"ToKey\":\"province\",\"ToType\":\"string\"}],\"Name\":\"Change prov utama\"}},\"node-1755500632083\":{\"SelectFields\":{\"Inputs\":[\"node-1755500567599\"],\"Name\":\"Select city utama\",\"Paths\":[[\"id\"],[\"name\"]]}},\"node-1755500418225\":{\"Join\":{\"Columns\":[{\"From\":\"node-1755500388009\",\"Keys\":[[\"id\"]]},{\"From\":\"node-1755499001717\",\"Keys\":[[\"pk_prov\"]]}],\"Inputs\":[\"node-1755500388009\",\"node-1755499001717\"],\"JoinType\":\"left\",\"Name\":\"Join prov\"}},\"node-1755490540725\":{\"SelectFields\":{\"Inputs\":[\"node-1755489636988\"],\"Name\":\"Select name\",\"Paths\":[[\"id\"],[\"company_name\"]]}},\"node-1755499785853\":{\"DynamicTransform\":{\"FunctionName\":\"gs_derived\",\"Inputs\":[\"node-1755498892291\"],\"Name\":\"Derived company_size\",\"OutputSchemas\":[{\"Columns\":[{\"Name\":\"company_size\",\"Type\":\"string\"},{\"Name\":\"pk_size\",\"Type\":\"int\"}]}],\"Parameters\":[{\"IsOptional\":false,\"Name\":\"colName\",\"Type\":\"str\",\"Value\":[\"company_size\"]},{\"IsOptional\":false,\"Name\":\"expr\",\"Type\":\"str\",\"Value\":[\"CASE      WHEN company_size IS NULL OR trim(company_size) = '' THEN NULL     WHEN regexp_like(company_size, '^[0-9]+$')           THEN cast(company_size AS VARCHAR(50))     WHEN regexp_like(company_size, '^[<>~]?[0-9]+(-[0-9]+)?$')           THEN trim(company_size)     ELSE NULL  END\"]}],\"Path\":\"s3://aws-glue-studio-transforms-737106620487-prod-ap-southeast-1/gs_derived.py\",\"TransformName\":\"gs_derived\",\"Version\":\"1.0.0\"}},\"node-1755500388009\":{\"Join\":{\"Columns\":[{\"From\":\"node-1755500267032\",\"Keys\":[[\"id\"]]},{\"From\":\"node-1755499785853\",\"Keys\":[[\"pk_size\"]]}],\"Inputs\":[\"node-1755500267032\",\"node-1755499785853\"],\"JoinType\":\"left\",\"Name\":\"Join company_size\"}},\"node-1755660402121\":{\"CustomCode\":{\"ClassName\":\"MyTransform\",\"Code\":\"from awsglue.dynamicframe import DynamicFrame, DynamicFrameCollection\\nfrom pyspark.sql.functions import col\\nfrom pyspark.sql import SparkSession\\n\\n# Step 1: Ambil source data dari DynamicFrameCollection\\nframe = dfc.select(list(dfc.keys())[0])\\nsource_df = frame.toDF()\\n\\n# Step 2: Koneksi ke MySQL\\njdbc_url = \\\"jdbc:mysql://mdm.cbu4ew0qm5gk.ap-southeast-1.rds.amazonaws.com:3306/mdm\\\"\\ndbtable = \\\"company\\\"\\nmysql_user = \\\"admin\\\"\\nmysql_pass = \\\"Queencard123\\\"\\n\\nconnection_options = {\\n    \\\"url\\\": jdbc_url,\\n    \\\"driver\\\": \\\"com.mysql.cj.jdbc.Driver\\\",\\n    \\\"dbtable\\\": dbtable,\\n    \\\"user\\\": mysql_user,\\n    \\\"password\\\": mysql_pass\\n}\\n\\nspark = glueContext.spark_session\\n\\n# Step 3: Ambil ID yang sudah ada di tabel target\\ntarget_df = spark.read \\\\\\n    .format(\\\"jdbc\\\") \\\\\\n    .option(\\\"url\\\", jdbc_url) \\\\\\n    .option(\\\"dbtable\\\", dbtable) \\\\\\n    .option(\\\"user\\\", mysql_user) \\\\\\n    .option(\\\"password\\\", mysql_pass) \\\\\\n    .load()\\n\\ntarget_ids = target_df.select(\\\"id\\\").rdd.flatMap(lambda x: x).collect()\\n\\n# Step 4: Pisahkan data baru dan data update (tidak pakai kolom tambahan)\\nnew_df = source_df.filter(~col(\\\"id\\\").isin(target_ids))\\nupdated_df = source_df.filter(col(\\\"id\\\").isin(target_ids))\\n\\n# Step 5: Gabungkan final dataframe\\nfinal_df = new_df.unionByName(updated_df)\\n\\n# Step 6: Hapus record lama dari MySQL (overwrite per id)\\nif updated_df.count() > 0:\\n    id_list = [str(row[\\\"id\\\"]) for row in updated_df.select(\\\"id\\\").collect()]\\n    id_string = \\\",\\\".join(id_list)\\n\\n    try:\\n        spark._sc._jvm.java.lang.Class.forName(\\\"com.mysql.cj.jdbc.Driver\\\")\\n        conn = spark._sc._jvm.java.sql.DriverManager.getConnection(jdbc_url, mysql_user, mysql_pass)\\n        stmt = conn.createStatement()\\n        delete_sql = f\\\"DELETE FROM {dbtable} WHERE id IN ({id_string})\\\"\\n        stmt.execute(delete_sql)\\n        stmt.close()\\n        conn.close()\\n    except Exception as e:\\n        print(\\\"❌ Error saat DELETE via JDBC:\\\", e)\\n        raise e\\n\\n# Step 7: Simpan final_df ke MySQL\\nif not final_df.rdd.isEmpty():\\n    final_df.write \\\\\\n        .format(\\\"jdbc\\\") \\\\\\n        .options(**connection_options) \\\\\\n        .mode(\\\"append\\\") \\\\\\n        .save()\\n\\n# Step 8: Kembalikan sebagai DynamicFrameCollection\\noutput_dyf = DynamicFrame.fromDF(final_df, glueContext, \\\"output\\\")\\nreturn DynamicFrameCollection({\\\"output\\\": output_dyf}, glueContext)    \",\"Inputs\":[\"node-1755589930026\"],\"Name\":\"CDC\",\"OutputSchemas\":[{\"Columns\":[{\"Name\":\"id\",\"Type\":\"int\"},{\"Name\":\"name\",\"Type\":\"string\"},{\"Name\":\"address\",\"Type\":\"string\"},{\"Name\":\"industry_sector\",\"Type\":\"string\"},{\"Name\":\"npwp_comp\",\"Type\":\"string\"},{\"Name\":\"nib\",\"Type\":\"string\"},{\"Name\":\"province\",\"Type\":\"string\"},{\"Name\":\"city\",\"Type\":\"string\"},{\"Name\":\"district\",\"Type\":\"string\"},{\"Name\":\"postal_code\",\"Type\":\"string\"},{\"Name\":\"company_size\",\"Type\":\"string\"},{\"Name\":\"website\",\"Type\":\"string\"},{\"Name\":\"company_social_media\",\"Type\":\"string\"},{\"Name\":\"customer_rate\",\"Type\":\"decimal(10,2)\"}]}]}},\"node-1755500239135\":{\"Join\":{\"Columns\":[{\"From\":\"node-1755498592199\",\"Keys\":[[\"id\"]]},{\"From\":\"node-1755499215094\",\"Keys\":[[\"pk_address\"]]}],\"Inputs\":[\"node-1755498592199\",\"node-1755499215094\"],\"JoinType\":\"left\",\"Name\":\"Join address\"}},\"node-1755498645754\":{\"ApplyMapping\":{\"Inputs\":[\"node-1755498606069\"],\"Mapping\":[{\"Dropped\":false,\"FromPath\":[\"id\"],\"FromType\":\"int\",\"ToKey\":\"pk_address\",\"ToType\":\"int\"},{\"Dropped\":false,\"FromPath\":[\"address\"],\"FromType\":\"string\",\"ToKey\":\"address\",\"ToType\":\"string\"}],\"Name\":\"Change address\"}},\"node-1755499215094\":{\"DynamicTransform\":{\"FunctionName\":\"gs_derived\",\"Inputs\":[\"node-1755498645754\"],\"Name\":\"Derived address\",\"OutputSchemas\":[{\"Columns\":[{\"Name\":\"pk_address\",\"Type\":\"int\"},{\"Name\":\"address\",\"Type\":\"string\"}]}],\"Parameters\":[{\"IsOptional\":false,\"Name\":\"colName\",\"Type\":\"str\",\"Value\":[\"address\"]},{\"IsOptional\":false,\"Name\":\"expr\",\"Type\":\"str\",\"Value\":[\"CASE      WHEN address IS NOT NULL THEN initcap(         regexp_replace(             regexp_replace(                 trim(lower(address)),                 '[^a-z0-9 ,./-]',                  ''             ),             ' +',             ' '         )     )     ELSE NULL END\"]}],\"Path\":\"s3://aws-glue-studio-transforms-737106620487-prod-ap-southeast-1/gs_derived.py\",\"TransformName\":\"gs_derived\",\"Version\":\"1.0.0\"}},\"node-1755500443940\":{\"Join\":{\"Columns\":[{\"From\":\"node-1755500418225\",\"Keys\":[[\"id\"]]},{\"From\":\"node-1755499019866\",\"Keys\":[[\"pk_city\"]]}],\"Inputs\":[\"node-1755500418225\",\"node-1755499019866\"],\"JoinType\":\"left\",\"Name\":\"Join city\"}},\"node-1755500534575\":{\"Join\":{\"Columns\":[{\"From\":\"node-1755500443940\",\"Keys\":[[\"prov_id\"]]},{\"From\":\"node-1755500508841\",\"Keys\":[[\"pk_prov_utama\"]]}],\"Inputs\":[\"node-1755500443940\",\"node-1755500508841\"],\"JoinType\":\"left\",\"Name\":\"Join prov utama\"}},\"node-1755500692663\":{\"Join\":{\"Columns\":[{\"From\":\"node-1755500534575\",\"Keys\":[[\"city_id\"]]},{\"From\":\"node-1755500672017\",\"Keys\":[[\"pk_city_utama\"]]}],\"Inputs\":[\"node-1755500534575\",\"node-1755500672017\"],\"JoinType\":\"left\",\"Name\":\"Join city utama\"}},\"node-1755500672017\":{\"ApplyMapping\":{\"Inputs\":[\"node-1755500632083\"],\"Mapping\":[{\"Dropped\":false,\"FromPath\":[\"id\"],\"FromType\":\"int\",\"ToKey\":\"pk_city_utama\",\"ToType\":\"int\"},{\"Dropped\":false,\"FromPath\":[\"name\"],\"FromType\":\"string\",\"ToKey\":\"city\",\"ToType\":\"string\"}],\"Name\":\"Change city utama\"}},\"node-1755500493385\":{\"SelectFields\":{\"Inputs\":[\"node-1755500468416\"],\"Name\":\"Select prov utama\",\"Paths\":[[\"id\"],[\"name\"]]}},\"node-1755498989785\":{\"SelectFields\":{\"Inputs\":[\"node-1755489636988\"],\"Name\":\"Select city\",\"Paths\":[[\"id\"],[\"city_id\"]]}},\"node-1755498592199\":{\"ApplyMapping\":{\"Inputs\":[\"node-1755490540725\"],\"Mapping\":[{\"Dropped\":false,\"FromPath\":[\"id\"],\"FromType\":\"int\",\"ToKey\":\"id\",\"ToType\":\"int\"},{\"Dropped\":false,\"FromPath\":[\"company_name\"],\"FromType\":\"string\",\"ToKey\":\"name\",\"ToType\":\"string\"}],\"Name\":\"Change name\"}},\"node-1755500267032\":{\"Join\":{\"Columns\":[{\"From\":\"node-1755500239135\",\"Keys\":[[\"id\"]]},{\"From\":\"node-1755498772254\",\"Keys\":[[\"pk_postal\"]]}],\"Inputs\":[\"node-1755500239135\",\"node-1755498772254\"],\"JoinType\":\"left\",\"Name\":\"Join postal\"}},\"node-1755500567599\":{\"CatalogSource\":{\"Database\":\"mdm-gc-latest\",\"Name\":\"city\",\"PartitionPredicate\":\"\",\"Table\":\"mdm_master_cities\"}}}",
  "sourceControlDetails" : {
    "provider" : "GITHUB",
    "repository" : "aws-glue-company",
    "branch" : "main",
    "folder" : "company-re"
  }
}